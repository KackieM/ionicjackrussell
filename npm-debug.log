0 info it worked if it ends with ok
1 verbose cli [ 'node', '/usr/local/bin/npm', 'install', '-g', 'firebase' ]
2 info using npm@1.4.9
3 info using node@v0.10.28
4 verbose cache add [ 'firebase', null ]
5 verbose cache add name=undefined spec="firebase" args=["firebase",null]
6 verbose parsed url { protocol: null,
6 verbose parsed url   slashes: null,
6 verbose parsed url   auth: null,
6 verbose parsed url   host: null,
6 verbose parsed url   port: null,
6 verbose parsed url   hostname: null,
6 verbose parsed url   hash: null,
6 verbose parsed url   search: null,
6 verbose parsed url   query: null,
6 verbose parsed url   pathname: 'firebase',
6 verbose parsed url   path: 'firebase',
6 verbose parsed url   href: 'firebase' }
7 silly lockFile 92f5e8df-firebase firebase
8 verbose lock firebase /Users/katherinemattison/.npm/92f5e8df-firebase.lock
9 silly lockFile 92f5e8df-firebase firebase
10 silly lockFile 92f5e8df-firebase firebase
11 verbose addNamed [ 'firebase', '' ]
12 verbose addNamed [ null, '*' ]
13 silly lockFile 2bddc103-firebase firebase@
14 verbose lock firebase@ /Users/katherinemattison/.npm/2bddc103-firebase.lock
15 silly addNameRange { name: 'firebase', range: '*', hasData: false }
16 verbose url raw firebase
17 verbose url resolving [ 'https://registry.npmjs.org/', './firebase' ]
18 verbose url resolved https://registry.npmjs.org/firebase
19 info trying registry request attempt 1 at 15:37:04
20 verbose etag "BBO4KF8ZD0MDW44XO5BKCJMYN"
21 http GET https://registry.npmjs.org/firebase
22 http 304 https://registry.npmjs.org/firebase
23 silly registry.get cb [ 304,
23 silly registry.get   { date: 'Fri, 06 Jun 2014 19:37:04 GMT',
23 silly registry.get     server: 'Apache',
23 silly registry.get     via: '1.1 varnish',
23 silly registry.get     'last-modified': 'Fri, 06 Jun 2014 19:37:04 GMT',
23 silly registry.get     'cache-control': 'max-age=1',
23 silly registry.get     etag: '"BBO4KF8ZD0MDW44XO5BKCJMYN"',
23 silly registry.get     'x-served-by': 'cache-jfk1027-JFK',
23 silly registry.get     'x-cache': 'MISS',
23 silly registry.get     'x-cache-hits': '0',
23 silly registry.get     'x-timer': 'S1402083424.728647,VS0,VE105',
23 silly registry.get     vary: 'Accept',
23 silly registry.get     'content-length': '0',
23 silly registry.get     'keep-alive': 'timeout=10, max=50',
23 silly registry.get     connection: 'Keep-Alive' } ]
24 verbose etag firebase from cache
25 silly addNameRange number 2 { name: 'firebase', range: '*', hasData: true }
26 silly addNameRange versions [ 'firebase',
26 silly addNameRange   [ '0.0.0',
26 silly addNameRange     '0.5.0',
26 silly addNameRange     '0.5.1',
26 silly addNameRange     '0.5.2',
26 silly addNameRange     '0.5.3',
26 silly addNameRange     '0.5.4',
26 silly addNameRange     '0.6.0',
26 silly addNameRange     '0.6.1',
26 silly addNameRange     '0.6.2',
26 silly addNameRange     '0.6.3',
26 silly addNameRange     '0.6.4',
26 silly addNameRange     '0.6.5',
26 silly addNameRange     '0.6.6',
26 silly addNameRange     '0.6.7',
26 silly addNameRange     '0.6.8',
26 silly addNameRange     '0.6.9',
26 silly addNameRange     '0.6.10',
26 silly addNameRange     '0.6.11',
26 silly addNameRange     '0.6.14',
26 silly addNameRange     '0.6.15',
26 silly addNameRange     '0.6.16',
26 silly addNameRange     '0.6.17',
26 silly addNameRange     '0.6.19',
26 silly addNameRange     '0.6.21',
26 silly addNameRange     '0.6.22',
26 silly addNameRange     '1.0.1',
26 silly addNameRange     '1.0.1-npm',
26 silly addNameRange     '1.0.2',
26 silly addNameRange     '1.0.3',
26 silly addNameRange     '1.0.4',
26 silly addNameRange     '1.0.5',
26 silly addNameRange     '1.0.10',
26 silly addNameRange     '1.0.10-2',
26 silly addNameRange     '1.0.11',
26 silly addNameRange     '1.0.12',
26 silly addNameRange     '1.0.13',
26 silly addNameRange     '1.0.14',
26 silly addNameRange     '1.0.15',
26 silly addNameRange     '1.0.15-2',
26 silly addNameRange     '1.0.15-3',
26 silly addNameRange     '1.0.17' ] ]
27 verbose addNamed [ 'firebase', '1.0.17' ]
28 verbose addNamed [ '1.0.17', '1.0.17' ]
29 silly lockFile f96931c0-firebase-1-0-17 firebase@1.0.17
30 verbose lock firebase@1.0.17 /Users/katherinemattison/.npm/f96931c0-firebase-1-0-17.lock
31 silly lockFile f96931c0-firebase-1-0-17 firebase@1.0.17
32 silly lockFile f96931c0-firebase-1-0-17 firebase@1.0.17
33 silly lockFile 2bddc103-firebase firebase@
34 silly lockFile 2bddc103-firebase firebase@
35 silly resolved [ { author: { name: 'Firebase' },
35 silly resolved     email: 'operations@firebase.com',
35 silly resolved     name: 'firebase',
35 silly resolved     description: 'Firebase library for Node.js',
35 silly resolved     version: '1.0.17',
35 silly resolved     main: './lib/firebase-node.js',
35 silly resolved     scripts: { test: 'echo "Error: no test specified" && exit 1' },
35 silly resolved     keywords: [ 'Firebase', 'synchronization', 'real-time', 'websocket' ],
35 silly resolved     dependencies: { 'faye-websocket': '>=0.6.0' },
35 silly resolved     repository: { type: 'none', url: 'https://www.firebase.com/' },
35 silly resolved     readme: '# Firebase\n\n## Overview\n\n[Firebase](https://www.firebase.com/) provides three key services that enable you to build rich, full-featured applications using just client-side code:\n\n0. **A realtime data API.** Our API replaces the need for most backend databases and server code by handling the heavy lifting of data storage and synchronization.\n\n0. **User management and authentication.** Our Simple Login service handles your user management and authentication needs out-of-the-box. Or, if you prefer to manage users yourself, you can maintain complete control using Custom Login.\n\n0. **Hosting.** With hosting, you can deploy your static website to the internet with a single command.\n\nAll of these services are built for security, reliability, and scale, so you can deploy your applications with confidence.\n\n## Node.js & Firebase\n\nWhile you can write entire Firebase applications without any backend code, many developers will still want to run their own servers. For these developers, we provide a full-featured Node.js module. This library has the same Javascript API and features as our web client.\n\nTo get started, install Firebase using npm:\n\n    npm install firebase\n\nNow, just require the library in your application and start using your data:\n\n    var Firebase = require(\'firebase\');\n    var myRootRef = new Firebase(\'https://myprojectname.firebaseIO-demo.com/\');\n    myRootRef.set("hello world!");\n\n## Next Steps\n\nIf you haven\'t already done so, you should try our [tutorial](https://www.firebase.com/tutorial/index.html#gettingstarted). Next, we recommend checking out our [example apps](https://www.firebase.com/docs/examples.html) or reading on in the [docs](https://www.firebase.com/docs/).\n\n\n\n',
35 silly resolved     readmeFilename: 'README.md',
35 silly resolved     _id: 'firebase@1.0.17',
35 silly resolved     _shasum: '756ea966c276919955187237330d8dea01957783',
35 silly resolved     _from: 'firebase@',
35 silly resolved     _resolved: 'https://registry.npmjs.org/firebase/-/firebase-1.0.17.tgz' } ]
36 info install firebase@1.0.17 into /usr/local/lib
37 info installOne firebase@1.0.17
38 info /usr/local/lib/node_modules/firebase unbuild
39 verbose tar unpack /Users/katherinemattison/.npm/firebase/1.0.17/package.tgz
40 silly lockFile 4da48cdc--local-lib-node-modules-firebase tar:///usr/local/lib/node_modules/firebase
41 verbose lock tar:///usr/local/lib/node_modules/firebase /Users/katherinemattison/.npm/4da48cdc--local-lib-node-modules-firebase.lock
42 silly lockFile 45ba60a4--npm-firebase-1-0-17-package-tgz tar:///Users/katherinemattison/.npm/firebase/1.0.17/package.tgz
43 verbose lock tar:///Users/katherinemattison/.npm/firebase/1.0.17/package.tgz /Users/katherinemattison/.npm/45ba60a4--npm-firebase-1-0-17-package-tgz.lock
44 silly gunzTarPerm modes [ '755', '644' ]
45 silly gunzTarPerm extractEntry package.json
46 silly gunzTarPerm extractEntry README.md
47 silly gunzTarPerm extractEntry lib/README
48 silly gunzTarPerm extractEntry lib/firebase-node.js
49 silly lockFile 4da48cdc--local-lib-node-modules-firebase tar:///usr/local/lib/node_modules/firebase
50 silly lockFile 4da48cdc--local-lib-node-modules-firebase tar:///usr/local/lib/node_modules/firebase
51 silly lockFile 45ba60a4--npm-firebase-1-0-17-package-tgz tar:///Users/katherinemattison/.npm/firebase/1.0.17/package.tgz
52 silly lockFile 45ba60a4--npm-firebase-1-0-17-package-tgz tar:///Users/katherinemattison/.npm/firebase/1.0.17/package.tgz
53 info preinstall firebase@1.0.17
54 verbose readDependencies using package.json deps
55 verbose readDependencies using package.json deps
56 verbose cache add [ 'faye-websocket@>=0.6.0', null ]
57 verbose cache add name=undefined spec="faye-websocket@>=0.6.0" args=["faye-websocket@>=0.6.0",null]
58 verbose parsed url { protocol: null,
58 verbose parsed url   slashes: null,
58 verbose parsed url   auth: null,
58 verbose parsed url   host: null,
58 verbose parsed url   port: null,
58 verbose parsed url   hostname: null,
58 verbose parsed url   hash: null,
58 verbose parsed url   search: null,
58 verbose parsed url   query: null,
58 verbose parsed url   pathname: 'faye-websocket@%3E=0.6.0',
58 verbose parsed url   path: 'faye-websocket@%3E=0.6.0',
58 verbose parsed url   href: 'faye-websocket@%3E=0.6.0' }
59 verbose cache add name="faye-websocket" spec=">=0.6.0" args=["faye-websocket",">=0.6.0"]
60 verbose parsed url { protocol: null,
60 verbose parsed url   slashes: null,
60 verbose parsed url   auth: null,
60 verbose parsed url   host: null,
60 verbose parsed url   port: null,
60 verbose parsed url   hostname: null,
60 verbose parsed url   hash: null,
60 verbose parsed url   search: null,
60 verbose parsed url   query: null,
60 verbose parsed url   pathname: '%3E=0.6.0',
60 verbose parsed url   path: '%3E=0.6.0',
60 verbose parsed url   href: '%3E=0.6.0' }
61 verbose addNamed [ 'faye-websocket', '>=0.6.0' ]
62 verbose addNamed [ null, '>=0.6.0' ]
63 silly lockFile eb8e2731-faye-websocket-0-6-0 faye-websocket@>=0.6.0
64 verbose lock faye-websocket@>=0.6.0 /Users/katherinemattison/.npm/eb8e2731-faye-websocket-0-6-0.lock
65 silly addNameRange { name: 'faye-websocket', range: '>=0.6.0', hasData: false }
66 verbose url raw faye-websocket
67 verbose url resolving [ 'https://registry.npmjs.org/', './faye-websocket' ]
68 verbose url resolved https://registry.npmjs.org/faye-websocket
69 info trying registry request attempt 1 at 15:37:04
70 verbose etag "5H5XEFSQCR1TI94P6YD4Q98QY"
71 http GET https://registry.npmjs.org/faye-websocket
72 http 304 https://registry.npmjs.org/faye-websocket
73 silly registry.get cb [ 304,
73 silly registry.get   { date: 'Fri, 06 Jun 2014 19:37:05 GMT',
73 silly registry.get     server: 'Apache',
73 silly registry.get     via: '1.1 varnish',
73 silly registry.get     'last-modified': 'Fri, 06 Jun 2014 19:37:05 GMT',
73 silly registry.get     'cache-control': 'max-age=1',
73 silly registry.get     etag: '"5H5XEFSQCR1TI94P6YD4Q98QY"',
73 silly registry.get     'x-served-by': 'cache-jfk1022-JFK',
73 silly registry.get     'x-cache': 'HIT',
73 silly registry.get     'x-cache-hits': '1',
73 silly registry.get     'x-timer': 'S1402083425.229027,VS0,VE105',
73 silly registry.get     vary: 'Accept',
73 silly registry.get     'content-length': '0',
73 silly registry.get     'keep-alive': 'timeout=10, max=50',
73 silly registry.get     connection: 'Keep-Alive' } ]
74 verbose etag faye-websocket from cache
75 silly addNameRange number 2 { name: 'faye-websocket', range: '>=0.6.0', hasData: true }
76 silly addNameRange versions [ 'faye-websocket',
76 silly addNameRange   [ '0.1.0',
76 silly addNameRange     '0.1.1',
76 silly addNameRange     '0.1.2',
76 silly addNameRange     '0.2.0',
76 silly addNameRange     '0.3.0',
76 silly addNameRange     '0.3.1',
76 silly addNameRange     '0.4.0',
76 silly addNameRange     '0.4.1',
76 silly addNameRange     '0.4.2',
76 silly addNameRange     '0.4.3',
76 silly addNameRange     '0.4.4',
76 silly addNameRange     '0.5.0',
76 silly addNameRange     '0.6.0',
76 silly addNameRange     '0.6.1',
76 silly addNameRange     '0.7.0',
76 silly addNameRange     '0.7.1',
76 silly addNameRange     '0.7.2' ] ]
77 verbose addNamed [ 'faye-websocket', '0.7.2' ]
78 verbose addNamed [ '0.7.2', '0.7.2' ]
79 silly lockFile a4440247-faye-websocket-0-7-2 faye-websocket@0.7.2
80 verbose lock faye-websocket@0.7.2 /Users/katherinemattison/.npm/a4440247-faye-websocket-0-7-2.lock
81 silly lockFile a4440247-faye-websocket-0-7-2 faye-websocket@0.7.2
82 silly lockFile a4440247-faye-websocket-0-7-2 faye-websocket@0.7.2
83 silly lockFile eb8e2731-faye-websocket-0-6-0 faye-websocket@>=0.6.0
84 silly lockFile eb8e2731-faye-websocket-0-6-0 faye-websocket@>=0.6.0
85 silly resolved [ { name: 'faye-websocket',
85 silly resolved     description: 'Standards-compliant WebSocket server and client',
85 silly resolved     homepage: 'http://github.com/faye/faye-websocket-node',
85 silly resolved     author:
85 silly resolved      { name: 'James Coglan',
85 silly resolved        email: 'jcoglan@gmail.com',
85 silly resolved        url: 'http://jcoglan.com/' },
85 silly resolved     keywords: [ 'websocket', 'eventsource' ],
85 silly resolved     license: 'MIT',
85 silly resolved     version: '0.7.2',
85 silly resolved     engines: { node: '>=0.4.0' },
85 silly resolved     main: './lib/faye/websocket',
85 silly resolved     dependencies: { 'websocket-driver': '>=0.3.1' },
85 silly resolved     devDependencies: { jstest: '', pace: '' },
85 silly resolved     scripts: { test: 'jstest spec/runner.js' },
85 silly resolved     repository:
85 silly resolved      { type: 'git',
85 silly resolved        url: 'git://github.com/faye/faye-websocket-node.git' },
85 silly resolved     bugs: { url: 'http://github.com/faye/faye-websocket-node/issues' },
85 silly resolved     readme: '# faye-websocket\n\n* Travis CI build: [![Build\n  status](https://secure.travis-ci.org/faye/faye-websocket-node.png)](http://travis-ci.org/faye/faye-websocket-node)\n* Autobahn tests: [server](http://faye.jcoglan.com/autobahn/servers/),\n  [client](http://faye.jcoglan.com/autobahn/clients/)\n\nThis is a general-purpose WebSocket implementation extracted from the\n[Faye](http://faye.jcoglan.com) project. It provides classes for easily\nbuilding WebSocket servers and clients in Node. It does not provide a server\nitself, but rather makes it easy to handle WebSocket connections within an\nexisting [Node](http://nodejs.org/) application. It does not provide any\nabstraction other than the standard [WebSocket\nAPI](http://dev.w3.org/html5/websockets/).\n\nIt also provides an abstraction for handling\n[EventSource](http://dev.w3.org/html5/eventsource/) connections, which are\none-way connections that allow the server to push data to the client. They are\nbased on streaming HTTP responses and can be easier to access via proxies than\nWebSockets.\n\n\n## Installation\n\n```\n$ npm install faye-websocket\n```\n\n\n## Handling WebSocket connections in Node\n\nYou can handle WebSockets on the server side by listening for HTTP Upgrade\nrequests, and creating a new socket for the request. This socket object exposes\nthe usual WebSocket methods for receiving and sending messages. For example this\nis how you\'d implement an echo server:\n\n```js\nvar WebSocket = require(\'faye-websocket\'),\n    http      = require(\'http\');\n\nvar server = http.createServer();\n\nserver.on(\'upgrade\', function(request, socket, body) {\n  if (WebSocket.isWebSocket(request)) {\n    var ws = new WebSocket(request, socket, body);\n    \n    ws.on(\'message\', function(event) {\n      ws.send(event.data);\n    });\n    \n    ws.on(\'close\', function(event) {\n      console.log(\'close\', event.code, event.reason);\n      ws = null;\n    });\n  }\n});\n\nserver.listen(8000);\n```\n\n`WebSocket` objects are also duplex streams, so you could replace the\n`ws.on(\'message\', ...)` line with:\n\n```js\n    ws.pipe(ws);\n```\n\nNote that under certain circumstances (notably a draft-76 client connecting\nthrough an HTTP proxy), the WebSocket handshake will not be complete after you\ncall `new WebSocket()` because the server will not have received the entire\nhandshake from the client yet. In this case, calls to `ws.send()` will buffer\nthe message in memory until the handshake is complete, at which point any\nbuffered messages will be sent to the client.\n\nIf you need to detect when the WebSocket handshake is complete, you can use the\n`onopen` event.\n\nIf the connection\'s protocol version supports it, you can call `ws.ping()` to\nsend a ping message and wait for the client\'s response. This method takes a\nmessage string, and an optional callback that fires when a matching pong\nmessage is received. It returns `true` iff a ping message was sent. If the\nclient does not support ping/pong, this method sends no data and returns\n`false`.\n\n```js\nws.ping(\'Mic check, one, two\', function() {\n  // fires when pong is received\n});\n```\n\n\n## Using the WebSocket client\n\nThe client supports both the plain-text `ws` protocol and the encrypted `wss`\nprotocol, and has exactly the same interface as a socket you would use in a web\nbrowser. On the wire it identifies itself as `hybi-13`.\n\n```js\nvar WebSocket = require(\'faye-websocket\'),\n    ws        = new WebSocket.Client(\'ws://www.example.com/\');\n\nws.on(\'open\', function(event) {\n  console.log(\'open\');\n  ws.send(\'Hello, world!\');\n});\n\nws.on(\'message\', function(event) {\n  console.log(\'message\', event.data);\n});\n\nws.on(\'close\', function(event) {\n  console.log(\'close\', event.code, event.reason);\n  ws = null;\n});\n```\n\nThe WebSocket client also lets you inspect the status and headers of the\nhandshake response via its `statusCode` and `headers` properties.\n\n\n## Subprotocol negotiation\n\nThe WebSocket protocol allows peers to select and identify the application\nprotocol to use over the connection. On the client side, you can set which\nprotocols the client accepts by passing a list of protocol names when you\nconstruct the socket:\n\n```js\nvar ws = new WebSocket.Client(\'ws://www.example.com/\', [\'irc\', \'amqp\']);\n```\n\nOn the server side, you can likewise pass in the list of protocols the server\nsupports after the other constructor arguments:\n\n```js\nvar ws = new WebSocket(request, socket, body, [\'irc\', \'amqp\']);\n```\n\nIf the client and server agree on a protocol, both the client- and server-side\nsocket objects expose the selected protocol through the `ws.protocol` property.\n\n\n## Initialization options\n\nBoth the server- and client-side classes allow an options object to be passed\nin at initialization time, for example:\n\n```js\nvar ws = new WebSocket(request, socket, body, protocols, options);\nvar ws = new WebSocket.Client(url, protocols, options);\n```\n\n`protocols` is an array of subprotocols as described above, or `null`.\n`options` is an optional object containing any of these fields:\n\n* `headers` - an object containing key-value pairs representing HTTP headers to\n  be sent during the handshake process\n* `maxLength` - the maximum allowed size of incoming message frames, in bytes.\n  The default value is `2^26 - 1`, or 1 byte short of 64 MiB.\n* `ping` - an integer that sets how often the WebSocket should send ping\n  frames, measured in seconds\n\n\n## WebSocket API\n\nBoth server- and client-side `WebSocket` objects support the following API.\n\n* <b>`on(\'open\', function(event) {})`</b> fires when the socket connection is\n  established. Event has no attributes.\n* <b>`on(\'message\', function(event) {})`</b> fires when the socket receives a\n  message. Event has one attribute, <b>`data`</b>, which is either a `String`\n  (for text frames) or a `Buffer` (for binary frames).\n* <b>`on(\'error\', function(event) {})`</b> fires when there is a protocol error\n  due to bad data sent by the other peer. This event is purely informational,\n  you do not need to implement error recover.\n* <b>`on(\'close\', function(event) {})`</b> fires when either the client or the\n  server closes the connection. Event has two optional attributes,\n  <b>`code`</b> and <b>`reason`</b>, that expose the status code and message\n  sent by the peer that closed the connection.\n* <b>`send(message)`</b> accepts either a `String` or a `Buffer` and sends a\n  text or binary message over the connection to the other peer.\n* <b>`ping(message = \'\', function() {})`</b> sends a ping frame with an\n  optional message and fires the callback when a matching pong is received.\n* <b>`close(code, reason)`</b> closes the connection, sending the given status\n  code and reason text, both of which are optional.\n* <b>`version`</b> is a string containing the version of the `WebSocket`\n  protocol the connection is using.\n* <b>`protocol`</b> is a string (which may be empty) identifying the\n  subprotocol the socket is using.\n\n\n## Handling EventSource connections in Node\n\nEventSource connections provide a very similar interface, although because they\nonly allow the server to send data to the client, there is no `onmessage` API.\nEventSource allows the server to push text messages to the client, where each\nmessage has an optional event-type and ID.\n\n```js\nvar WebSocket   = require(\'faye-websocket\'),\n    EventSource = WebSocket.EventSource,\n    http        = require(\'http\');\n\nvar server = http.createServer();\n\nserver.on(\'request\', function(request, response) {\n  if (EventSource.isEventSource(request)) {\n    var es = new EventSource(request, response);\n    console.log(\'open\', es.url, es.lastEventId);\n    \n    // Periodically send messages\n    var loop = setInterval(function() { es.send(\'Hello\') }, 1000);\n    \n    es.on(\'close\', function() {\n      clearInterval(loop);\n      es = null;\n    });\n  \n  } else {\n    // Normal HTTP request\n    response.writeHead(200, {\'Content-Type\': \'text/plain\'});\n    response.end(\'Hello\');\n  }\n});\n\nserver.listen(8000);\n```\n\nThe `send` method takes two optional parameters, `event` and `id`. The default\nevent-type is `\'message\'` with no ID. For example, to send a `notification`\nevent with ID `99`:\n\n```js\nes.send(\'Breaking News!\', {event: \'notification\', id: \'99\'});\n```\n\nThe `EventSource` object exposes the following properties:\n\n* <b>`url`</b> is a string containing the URL the client used to create the\n  EventSource.\n* <b>`lastEventId`</b> is a string containing the last event ID received by the\n  client. You can use this when the client reconnects after a dropped\n  connection to determine which messages need resending.\n\nWhen you initialize an EventSource with ` new EventSource()`, you can pass\nconfiguration options after the `response` parameter. Available options are:\n\n* <b>`headers`</b> is an object containing custom headers to be set on the\n  EventSource response.\n* <b>`retry`</b> is a number that tells the client how long (in seconds) it\n  should wait after a dropped connection before attempting to reconnect.\n* <b>`ping`</b> is a number that tells the server how often (in seconds) to\n  send \'ping\' packets to the client to keep the connection open, to defeat\n  timeouts set by proxies. The client will ignore these messages.\n\nFor example, this creates a connection that allows access from any origin, pings\nevery 15 seconds and is retryable every 10 seconds if the connection is broken:\n\n```js\nvar es = new EventSource(request, response, {\n  headers: {\'Access-Control-Allow-Origin\': \'*\'},\n  ping:    15,\n  retry:   10\n});\n```\n\nYou can send a ping message at any time by calling `es.ping()`. Unlike\nWebSocket, the client does not send a response to this; it is merely to send\nsome data over the wire to keep the connection alive.\n\n\n## License\n\n(The MIT License)\n\nCopyright (c) 2010-2013 James Coglan\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of\nthis software and associated documentation files (the \'Software\'), to deal in\nthe Software without restriction, including without limitation the rights to\nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\nof the Software, and to permit persons to whom the Software is furnished to do\nso, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \'AS IS\', WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n',
85 silly resolved     readmeFilename: 'README.md',
85 silly resolved     _id: 'faye-websocket@0.7.2',
85 silly resolved     _shasum: '799970386f87105592397434b02abfa4f07bdf70',
85 silly resolved     _from: 'faye-websocket@>=0.6.0',
85 silly resolved     _resolved: 'https://registry.npmjs.org/faye-websocket/-/faye-websocket-0.7.2.tgz' } ]
86 info install faye-websocket@0.7.2 into /usr/local/lib/node_modules/firebase
87 info installOne faye-websocket@0.7.2
88 info /usr/local/lib/node_modules/firebase/node_modules/faye-websocket unbuild
89 verbose tar unpack /Users/katherinemattison/.npm/faye-websocket/0.7.2/package.tgz
90 silly lockFile 88a72cd5-base-node-modules-faye-websocket tar:///usr/local/lib/node_modules/firebase/node_modules/faye-websocket
91 verbose lock tar:///usr/local/lib/node_modules/firebase/node_modules/faye-websocket /Users/katherinemattison/.npm/88a72cd5-base-node-modules-faye-websocket.lock
92 silly lockFile c7d9f13a-faye-websocket-0-7-2-package-tgz tar:///Users/katherinemattison/.npm/faye-websocket/0.7.2/package.tgz
93 verbose lock tar:///Users/katherinemattison/.npm/faye-websocket/0.7.2/package.tgz /Users/katherinemattison/.npm/c7d9f13a-faye-websocket-0-7-2-package-tgz.lock
94 silly gunzTarPerm modes [ '755', '644' ]
95 silly gunzTarPerm extractEntry package.json
96 silly gunzTarPerm extractEntry README.md
97 silly gunzTarPerm extractEntry CHANGELOG.md
98 silly gunzTarPerm extractEntry examples/autobahn_client.js
99 silly gunzTarPerm extractEntry examples/client.js
100 silly gunzTarPerm extractEntry examples/server.js
101 silly gunzTarPerm extractEntry examples/haproxy.conf
102 silly gunzTarPerm extractEntry examples/sse.html
103 silly gunzTarPerm extractEntry examples/ws.html
104 silly gunzTarPerm extractEntry lib/faye/eventsource.js
105 silly gunzTarPerm extractEntry lib/faye/websocket.js
106 silly gunzTarPerm extractEntry lib/faye/websocket/api.js
107 silly gunzTarPerm extractEntry lib/faye/websocket/client.js
108 silly gunzTarPerm extractEntry lib/faye/websocket/api/event.js
109 silly gunzTarPerm extractEntry lib/faye/websocket/api/event_target.js
110 silly lockFile 88a72cd5-base-node-modules-faye-websocket tar:///usr/local/lib/node_modules/firebase/node_modules/faye-websocket
111 silly lockFile 88a72cd5-base-node-modules-faye-websocket tar:///usr/local/lib/node_modules/firebase/node_modules/faye-websocket
112 silly lockFile c7d9f13a-faye-websocket-0-7-2-package-tgz tar:///Users/katherinemattison/.npm/faye-websocket/0.7.2/package.tgz
113 silly lockFile c7d9f13a-faye-websocket-0-7-2-package-tgz tar:///Users/katherinemattison/.npm/faye-websocket/0.7.2/package.tgz
114 info preinstall faye-websocket@0.7.2
115 verbose readDependencies using package.json deps
116 verbose readDependencies using package.json deps
117 verbose cache add [ 'websocket-driver@>=0.3.1', null ]
118 verbose cache add name=undefined spec="websocket-driver@>=0.3.1" args=["websocket-driver@>=0.3.1",null]
119 verbose parsed url { protocol: null,
119 verbose parsed url   slashes: null,
119 verbose parsed url   auth: null,
119 verbose parsed url   host: null,
119 verbose parsed url   port: null,
119 verbose parsed url   hostname: null,
119 verbose parsed url   hash: null,
119 verbose parsed url   search: null,
119 verbose parsed url   query: null,
119 verbose parsed url   pathname: 'websocket-driver@%3E=0.3.1',
119 verbose parsed url   path: 'websocket-driver@%3E=0.3.1',
119 verbose parsed url   href: 'websocket-driver@%3E=0.3.1' }
120 verbose cache add name="websocket-driver" spec=">=0.3.1" args=["websocket-driver",">=0.3.1"]
121 verbose parsed url { protocol: null,
121 verbose parsed url   slashes: null,
121 verbose parsed url   auth: null,
121 verbose parsed url   host: null,
121 verbose parsed url   port: null,
121 verbose parsed url   hostname: null,
121 verbose parsed url   hash: null,
121 verbose parsed url   search: null,
121 verbose parsed url   query: null,
121 verbose parsed url   pathname: '%3E=0.3.1',
121 verbose parsed url   path: '%3E=0.3.1',
121 verbose parsed url   href: '%3E=0.3.1' }
122 verbose addNamed [ 'websocket-driver', '>=0.3.1' ]
123 verbose addNamed [ null, '>=0.3.1' ]
124 silly lockFile 27116e03-websocket-driver-0-3-1 websocket-driver@>=0.3.1
125 verbose lock websocket-driver@>=0.3.1 /Users/katherinemattison/.npm/27116e03-websocket-driver-0-3-1.lock
126 silly addNameRange { name: 'websocket-driver', range: '>=0.3.1', hasData: false }
127 verbose url raw websocket-driver
128 verbose url resolving [ 'https://registry.npmjs.org/', './websocket-driver' ]
129 verbose url resolved https://registry.npmjs.org/websocket-driver
130 info trying registry request attempt 1 at 15:37:05
131 verbose etag "3S70BP5VOR15H1YRHWDGCQ6YM"
132 http GET https://registry.npmjs.org/websocket-driver
133 http 304 https://registry.npmjs.org/websocket-driver
134 silly registry.get cb [ 304,
134 silly registry.get   { date: 'Fri, 06 Jun 2014 19:37:05 GMT',
134 silly registry.get     server: 'Apache',
134 silly registry.get     via: '1.1 varnish',
134 silly registry.get     'last-modified': 'Fri, 06 Jun 2014 19:37:05 GMT',
134 silly registry.get     'cache-control': 'max-age=1',
134 silly registry.get     etag: '"3S70BP5VOR15H1YRHWDGCQ6YM"',
134 silly registry.get     'x-served-by': 'cache-jfk1027-JFK',
134 silly registry.get     'x-cache': 'MISS',
134 silly registry.get     'x-cache-hits': '0',
134 silly registry.get     'x-timer': 'S1402083425.684336,VS0,VE103',
134 silly registry.get     vary: 'Accept',
134 silly registry.get     'content-length': '0',
134 silly registry.get     'keep-alive': 'timeout=10, max=50',
134 silly registry.get     connection: 'Keep-Alive' } ]
135 verbose etag websocket-driver from cache
136 silly addNameRange number 2 { name: 'websocket-driver', range: '>=0.3.1', hasData: true }
137 silly addNameRange versions [ 'websocket-driver',
137 silly addNameRange   [ '0.1.0',
137 silly addNameRange     '0.2.0',
137 silly addNameRange     '0.2.1',
137 silly addNameRange     '0.2.2',
137 silly addNameRange     '0.3.0',
137 silly addNameRange     '0.3.1',
137 silly addNameRange     '0.3.2',
137 silly addNameRange     '0.3.3',
137 silly addNameRange     '0.3.4' ] ]
138 verbose addNamed [ 'websocket-driver', '0.3.4' ]
139 verbose addNamed [ '0.3.4', '0.3.4' ]
140 silly lockFile 5cb4f03c-websocket-driver-0-3-4 websocket-driver@0.3.4
141 verbose lock websocket-driver@0.3.4 /Users/katherinemattison/.npm/5cb4f03c-websocket-driver-0-3-4.lock
142 silly lockFile 5cb4f03c-websocket-driver-0-3-4 websocket-driver@0.3.4
143 silly lockFile 5cb4f03c-websocket-driver-0-3-4 websocket-driver@0.3.4
144 silly lockFile 27116e03-websocket-driver-0-3-1 websocket-driver@>=0.3.1
145 silly lockFile 27116e03-websocket-driver-0-3-1 websocket-driver@>=0.3.1
146 silly resolved [ { name: 'websocket-driver',
146 silly resolved     description: 'WebSocket protocol handler with pluggable I/O',
146 silly resolved     homepage: 'http://github.com/faye/websocket-driver-node',
146 silly resolved     author:
146 silly resolved      { name: 'James Coglan',
146 silly resolved        email: 'jcoglan@gmail.com',
146 silly resolved        url: 'http://jcoglan.com/' },
146 silly resolved     keywords: [ 'websocket' ],
146 silly resolved     license: 'MIT',
146 silly resolved     version: '0.3.4',
146 silly resolved     engines: { node: '>=0.4.0' },
146 silly resolved     main: './lib/websocket/driver',
146 silly resolved     devDependencies: { jstest: '' },
146 silly resolved     scripts: { test: 'jstest spec/runner.js' },
146 silly resolved     repository:
146 silly resolved      { type: 'git',
146 silly resolved        url: 'git://github.com/faye/websocket-driver-node.git' },
146 silly resolved     bugs: { url: 'http://github.com/faye/websocket-driver-node/issues' },
146 silly resolved     readme: '# websocket-driver [![Build Status](https://travis-ci.org/faye/websocket-driver-node.png)](https://travis-ci.org/faye/websocket-driver-node)\n\nThis module provides a complete implementation of the WebSocket protocols that\ncan be hooked up to any I/O stream. It aims to simplify things by decoupling\nthe protocol details from the I/O layer, such that users only need to implement\ncode to stream data in and out of it without needing to know anything about how\nthe protocol actually works. Think of it as a complete WebSocket system with\npluggable I/O.\n\nDue to this design, you get a lot of things for free. In particular, if you\nhook this module up to some I/O object, it will do all of this for you:\n\n* Select the correct server-side driver to talk to the client\n* Generate and send both server- and client-side handshakes\n* Recognize when the handshake phase completes and the WS protocol begins\n* Negotiate subprotocol selection based on `Sec-WebSocket-Protocol`\n* Buffer sent messages until the handshake process is finished\n* Deal with proxies that defer delivery of the draft-76 handshake body\n* Notify you when the socket is open and closed and when messages arrive\n* Recombine fragmented messages\n* Dispatch text, binary, ping and close frames\n* Manage the socket-closing handshake process\n* Automatically reply to ping frames with a matching pong\n* Apply masking to messages sent by the client\n\nThis library was originally extracted from the [Faye](http://faye.jcoglan.com)\nproject but now aims to provide simple WebSocket support for any Node-based\nproject.\n\n\n## Installation\n\n```\n$ npm install websocket-driver\n```\n\n\n## Usage\n\nThis module provides protocol drivers that have the same interface on the\nserver and on the client. A WebSocket driver is an object with two duplex\nstreams attached; one for incoming/outgoing messages and one for managing the\nwire protocol over an I/O stream. The full API is described below.\n\n\n### Server-side with HTTP\n\nA Node webserver emits a special event for \'upgrade\' requests, and this is\nwhere you should handle WebSockets. You first check whether the request is a\nWebSocket, and if so you can create a driver and attach the request\'s I/O\nstream to it.\n\n```js\nvar http = require(\'http\'),\n    websocket = require(\'websocket-driver\');\n\nvar server = http.createServer();\n\nserver.on(\'upgrade\', function(request, socket, body) {\n  if (!websocket.isWebSocket(request)) return;\n\n  var driver = websocket.http(request);\n\n  driver.io.write(body);\n  socket.pipe(driver.io).pipe(socket);\n\n  driver.messages.on(\'data\', function(message) {\n    console.log(\'Got a message\', message);\n  });\n\n  driver.start();\n});\n```\n\nNote the line `driver.io.write(body)` - you must pass the `body` buffer to the\nsocket driver in order to make certain versions of the protocol work.\n\n\n### Server-side with TCP\n\nYou can also handle WebSocket connections in a bare TCP server, if you\'re not\nusing an HTTP server and don\'t want to implement HTTP parsing yourself.\n\nThe driver will emit a `connect` event when a request is received, and at this\npoint you can detect whether it\'s a WebSocket and handle it as such. Here\'s an\nexample using the Node `net` module:\n\n```js\nvar net = require(\'net\'),\n    websocket = require(\'websocket-driver\');\n\nvar server = net.createServer(function(connection) {\n  var driver = websocket.server();\n\n  driver.on(\'connect\', function() {\n    if (websocket.isWebSocket(driver)) {\n      driver.start();\n    } else {\n      // handle other HTTP requests\n    }\n  });\n\n  driver.on(\'close\', function() { connection.end() });\n  connection.on(\'error\', function() {});\n\n  connection.pipe(driver.io).pipe(connection);\n\n  driver.messages.pipe(driver.messages);\n});\n\nserver.listen(4180);\n```\n\nIn the `connect` event, the driver gains several properties to describe the\nrequest, similar to a Node request object, such as `method`, `url` and\n`headers`. However you should remember it\'s not a real request object; you\ncannot write data to it, it only tells you what request data we parsed from the\ninput.\n\nIf the request has a body, it will be in the `driver.body` buffer, but only as\nmuch of the body as has been piped into the driver when the `connect` event\nfires.\n\n\n### Client-side\n\nSimilarly, to implement a WebSocket client you just need to make a driver by\npassing in a URL. After this you use the driver API as described below to\nprocess incoming data and send outgoing data.\n\n\n```js\nvar net = require(\'net\'),\n    websocket = require(\'websocket-driver\');\n\nvar driver = websocket.client(\'ws://www.example.com/socket\'),\n    tcp = net.createConnection(80, \'www.example.com\');\n\ntcp.pipe(driver.io).pipe(tcp);\n\ndriver.messages.on(\'data\', function(message) {\n  console.log(\'Got a message\', message);\n});\n\ntcp.on(\'connect\', function() {\n  driver.start();\n});\n```\n\nClient drivers have two additional properties for reading the HTTP data that\nwas sent back by the server:\n\n* `driver.statusCode` - the integer value of the HTTP status code\n* `driver.headers` - an object containing the response headers\n\n\n### Driver API\n\nDrivers are created using one of the following methods:\n\n```js\ndriver = websocket.http(request, options)\ndriver = websocket.server(options)\ndriver = websocket.client(url, options)\n```\n\nThe `http` method returns a driver chosen using the headers from a Node HTTP\nrequest object. The `server` method returns a driver that will parse an HTTP\nrequest and then decide which driver to use for it using the `http` method. The\n`client` method always returns a driver for the RFC version of the protocol\nwith masking enabled on outgoing frames.\n\nThe `options` argument is optional, and is an object. It may contain the\nfollowing fields:\n\n* `maxLength` - the maximum allowed size of incoming message frames, in bytes.\n  The default value is `2^26 - 1`, or 1 byte short of 64 MiB.\n* `protocols` - an array of strings representing acceptable subprotocols for\n  use over the socket. The driver will negotiate one of these to use via the\n  `Sec-WebSocket-Protocol` header if supported by the other peer.\n\nA driver has two duplex streams attached to it:\n\n* <b>`driver.io`</b> - this stream should be attached to an I/O socket like a\n  TCP stream. Pipe incoming TCP chunks to this stream for them to be parsed,\n  and pipe this stream back into TCP to send outgoing frames.\n* <b>`driver.messages`</b> - this stream emits messages received over the\n  WebSocket.  Writing to it sends messages to the other peer by emitting frames\n  via the `driver.io` stream.\n\nAll drivers respond to the following API methods, but some of them are no-ops\ndepending on whether the client supports the behaviour.\n\nNote that most of these methods are commands: if they produce data that should\nbe sent over the socket, they will give this to you by emitting `data` events\non the `driver.io` stream.\n\n#### `driver.on(\'open\', function(event) {})`\n\nSets the callback to execute when the socket becomes open.\n\n#### `driver.on(\'message\', function(event) {})`\n\nSets the callback to execute when a message is received. `event` will have a\n`data` attribute containing either a string in the case of a text message or a\n`Buffer` in the case of a binary message.\n\nYou can also listen for messages using the `driver.messages.on(\'data\')` event,\nwhich emits strings for text messages and buffers for binary messages.\n\n#### `driver.on(\'error\', function(event) {})`\n\nSets the callback to execute when a protocol error occurs due to the other peer\nsending an invalid byte sequence. `event` will have a `message` attribute\ndescribing the error.\n\n#### `driver.on(\'close\', function(event) {})`\n\nSets the callback to execute when the socket becomes closed. The `event` object\nhas `code` and `reason` attributes.\n\n#### `driver.setHeader(name, value)`\n\nSets a custom header to be sent as part of the handshake response, either from\nthe server or from the client. Must be called before `start()`, since this is\nwhen the headers are serialized and sent.\n\n#### `driver.start()`\n\nInitiates the protocol by sending the handshake - either the response for a\nserver-side driver or the request for a client-side one. This should be the\nfirst method you invoke.  Returns `true` iff a handshake was sent.\n\n#### `driver.parse(string)`\n\nTakes a string and parses it, potentially resulting in message events being\nemitted (see `on(\'message\')` above) or in data being sent to `driver.io`.  You\nshould send all data you receive via I/O to this method by piping a stream into\n`driver.io`.\n\n#### `driver.text(string)`\n\nSends a text message over the socket. If the socket handshake is not yet\ncomplete, the message will be queued until it is. Returns `true` if the message\nwas sent or queued, and `false` if the socket can no longer send messages.\n\nThis method is equivalent to `driver.messages.write(string)`.\n\n#### `driver.binary(buffer)`\n\nTakes a `Buffer` and sends it as a binary message. Will queue and return `true`\nor `false` the same way as the `text` method. It will also return `false` if\nthe driver does not support binary messages.\n\nThis method is equivalent to `driver.messages.write(buffer)`.\n\n#### `driver.ping(string = \'\', function() {})`\n\nSends a ping frame over the socket, queueing it if necessary. `string` and the\ncallback are both optional. If a callback is given, it will be invoked when the\nsocket receives a pong frame whose content matches `string`. Returns `false` if\nframes can no longer be sent, or if the driver does not support ping/pong.\n\n#### `driver.close()`\n\nInitiates the closing handshake if the socket is still open. For drivers with\nno closing handshake, this will result in the immediate execution of the\n`on(\'close\')` driver. For drivers with a closing handshake, this sends a\nclosing frame and `emit(\'close\')` will execute when a response is received or a\nprotocol error occurs.\n\n#### `driver.version`\n\nReturns the WebSocket version in use as a string. Will either be `hixie-75`,\n`hixie-76` or `hybi-$version`.\n\n#### `driver.protocol`\n\nReturns a string containing the selected subprotocol, if any was agreed upon\nusing the `Sec-WebSocket-Protocol` mechanism. This value becomes available\nafter `emit(\'open\')` has fired.\n\n\n## License\n\n(The MIT License)\n\nCopyright (c) 2010-2014 James Coglan\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of\nthis software and associated documentation files (the \'Software\'), to deal in\nthe Software without restriction, including without limitation the rights to\nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\nof the Software, and to permit persons to whom the Software is furnished to do\nso, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \'AS IS\', WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n',
146 silly resolved     readmeFilename: 'README.md',
146 silly resolved     _id: 'websocket-driver@0.3.4',
146 silly resolved     _shasum: 'f37ab303f6a602c4b0dbcaa1cdd771e442b04ea7',
146 silly resolved     _from: 'websocket-driver@>=0.3.1',
146 silly resolved     _resolved: 'https://registry.npmjs.org/websocket-driver/-/websocket-driver-0.3.4.tgz' } ]
147 info install websocket-driver@0.3.4 into /usr/local/lib/node_modules/firebase/node_modules/faye-websocket
148 info installOne websocket-driver@0.3.4
149 info /usr/local/lib/node_modules/firebase/node_modules/faye-websocket/node_modules/websocket-driver unbuild
150 verbose tar unpack /Users/katherinemattison/.npm/websocket-driver/0.3.4/package.tgz
151 silly lockFile fce17f1e-et-node-modules-websocket-driver tar:///usr/local/lib/node_modules/firebase/node_modules/faye-websocket/node_modules/websocket-driver
152 verbose lock tar:///usr/local/lib/node_modules/firebase/node_modules/faye-websocket/node_modules/websocket-driver /Users/katherinemattison/.npm/fce17f1e-et-node-modules-websocket-driver.lock
153 silly lockFile 6a658021-bsocket-driver-0-3-4-package-tgz tar:///Users/katherinemattison/.npm/websocket-driver/0.3.4/package.tgz
154 verbose lock tar:///Users/katherinemattison/.npm/websocket-driver/0.3.4/package.tgz /Users/katherinemattison/.npm/6a658021-bsocket-driver-0-3-4-package-tgz.lock
155 silly gunzTarPerm modes [ '755', '644' ]
156 silly gunzTarPerm extractEntry package.json
157 silly gunzTarPerm modified mode [ 'package.json', 436, 420 ]
158 silly gunzTarPerm extractEntry README.md
159 silly gunzTarPerm modified mode [ 'README.md', 436, 420 ]
160 silly gunzTarPerm extractEntry CHANGELOG.md
161 silly gunzTarPerm modified mode [ 'CHANGELOG.md', 436, 420 ]
162 silly gunzTarPerm extractEntry examples/tcp_server.js
163 silly gunzTarPerm modified mode [ 'examples/tcp_server.js', 436, 420 ]
164 silly gunzTarPerm extractEntry lib/websocket/driver.js
165 silly gunzTarPerm modified mode [ 'lib/websocket/driver.js', 436, 420 ]
166 silly gunzTarPerm extractEntry lib/websocket/streams.js
167 silly gunzTarPerm modified mode [ 'lib/websocket/streams.js', 436, 420 ]
168 silly gunzTarPerm extractEntry lib/websocket/driver/base.js
169 silly gunzTarPerm modified mode [ 'lib/websocket/driver/base.js', 436, 420 ]
170 silly gunzTarPerm extractEntry lib/websocket/driver/client.js
171 silly gunzTarPerm modified mode [ 'lib/websocket/driver/client.js', 436, 420 ]
172 silly gunzTarPerm extractEntry lib/websocket/driver/draft75.js
173 silly gunzTarPerm modified mode [ 'lib/websocket/driver/draft75.js', 436, 420 ]
174 silly gunzTarPerm extractEntry lib/websocket/driver/draft76.js
175 silly gunzTarPerm modified mode [ 'lib/websocket/driver/draft76.js', 436, 420 ]
176 silly gunzTarPerm extractEntry lib/websocket/driver/headers.js
177 silly gunzTarPerm modified mode [ 'lib/websocket/driver/headers.js', 436, 420 ]
178 silly gunzTarPerm extractEntry lib/websocket/driver/http_parser.js
179 silly gunzTarPerm modified mode [ 'lib/websocket/driver/http_parser.js', 436, 420 ]
180 silly gunzTarPerm extractEntry lib/websocket/driver/hybi.js
181 silly gunzTarPerm modified mode [ 'lib/websocket/driver/hybi.js', 436, 420 ]
182 silly gunzTarPerm extractEntry lib/websocket/driver/server.js
183 silly gunzTarPerm modified mode [ 'lib/websocket/driver/server.js', 436, 420 ]
184 silly gunzTarPerm extractEntry lib/websocket/driver/hybi/stream_reader.js
185 silly gunzTarPerm modified mode [ 'lib/websocket/driver/hybi/stream_reader.js', 436, 420 ]
186 silly lockFile fce17f1e-et-node-modules-websocket-driver tar:///usr/local/lib/node_modules/firebase/node_modules/faye-websocket/node_modules/websocket-driver
187 silly lockFile fce17f1e-et-node-modules-websocket-driver tar:///usr/local/lib/node_modules/firebase/node_modules/faye-websocket/node_modules/websocket-driver
188 silly lockFile 6a658021-bsocket-driver-0-3-4-package-tgz tar:///Users/katherinemattison/.npm/websocket-driver/0.3.4/package.tgz
189 silly lockFile 6a658021-bsocket-driver-0-3-4-package-tgz tar:///Users/katherinemattison/.npm/websocket-driver/0.3.4/package.tgz
190 info preinstall websocket-driver@0.3.4
191 verbose readDependencies using package.json deps
192 verbose readDependencies using package.json deps
193 silly resolved []
194 verbose about to build /usr/local/lib/node_modules/firebase/node_modules/faye-websocket/node_modules/websocket-driver
195 info build /usr/local/lib/node_modules/firebase/node_modules/faye-websocket/node_modules/websocket-driver
196 verbose linkStuff [ true,
196 verbose linkStuff   '/usr/local/lib/node_modules',
196 verbose linkStuff   false,
196 verbose linkStuff   '/usr/local/lib/node_modules/firebase/node_modules/faye-websocket/node_modules' ]
197 info linkStuff websocket-driver@0.3.4
198 verbose linkBins websocket-driver@0.3.4
199 verbose linkMans websocket-driver@0.3.4
200 verbose rebuildBundles websocket-driver@0.3.4
201 info install websocket-driver@0.3.4
202 info postinstall websocket-driver@0.3.4
203 verbose about to build /usr/local/lib/node_modules/firebase/node_modules/faye-websocket
204 info build /usr/local/lib/node_modules/firebase/node_modules/faye-websocket
205 verbose linkStuff [ true,
205 verbose linkStuff   '/usr/local/lib/node_modules',
205 verbose linkStuff   false,
205 verbose linkStuff   '/usr/local/lib/node_modules/firebase/node_modules' ]
206 info linkStuff faye-websocket@0.7.2
207 verbose linkBins faye-websocket@0.7.2
208 verbose linkMans faye-websocket@0.7.2
209 verbose rebuildBundles faye-websocket@0.7.2
210 verbose rebuildBundles [ 'websocket-driver' ]
211 info install faye-websocket@0.7.2
212 info postinstall faye-websocket@0.7.2
213 verbose about to build /usr/local/lib/node_modules/firebase
214 info build /usr/local/lib/node_modules/firebase
215 verbose linkStuff [ true,
215 verbose linkStuff   '/usr/local/lib/node_modules',
215 verbose linkStuff   true,
215 verbose linkStuff   '/usr/local/lib/node_modules' ]
216 info linkStuff firebase@1.0.17
217 verbose linkBins firebase@1.0.17
218 verbose linkMans firebase@1.0.17
219 verbose rebuildBundles firebase@1.0.17
220 verbose rebuildBundles [ 'faye-websocket' ]
221 info install firebase@1.0.17
222 info postinstall firebase@1.0.17
223 error peerinvalid The package generator-angular does not satisfy its siblings' peerDependencies requirements!
223 error peerinvalid Peer generator-angularfire@0.0.6 wants generator-angular@~0.7.1
224 error System Darwin 13.2.0
225 error command "node" "/usr/local/bin/npm" "install" "-g" "firebase"
226 error cwd /Users/katherinemattison/Documents/reposits/rwreceiptmgr
227 error node -v v0.10.28
228 error npm -v 1.4.9
229 error code EPEERINVALID
230 verbose exit [ 1, true ]
